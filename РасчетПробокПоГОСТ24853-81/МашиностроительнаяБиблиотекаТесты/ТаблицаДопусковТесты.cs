using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;
using МашиностроительнаяБиблиотека;

namespace МашиностроительнаяБиблиотекаТесты
{
    [TestFixture]
    class ТаблицаДопусковТесты
    {
        [Test]
        public void ПроверитьКонтрольныеСуммыДопусков()
        {
            int количествоСтрок = ТаблицаДопусков.допуски.Length;
            int количествоСтолбцов = ТаблицаДопусков.допуски[0].Length;
            decimal[] суммы = { 209.8m, 296.2m, 424.5m, 582.2m, 802m, 1110m, 1534m, 2202m, 3499m, 5460m, 8714m, 13985m, 22015m, 34990m, 54600m, 87140m, 139850m, 220150m, 349900m, 546000m };
            for (int cтолбец = 0; cтолбец < количествоСтолбцов; cтолбец++)
            {
                decimal суммаДопусковПоКвалитету = 0;
                for (int строка = 0; строка < количествоСтрок; строка++)
                {
                    decimal допуск = ТаблицаДопусков.допуски[строка][cтолбец];
                    суммаДопусковПоКвалитету += допуск;
                }
                decimal ожидСуммаДопусковПоКвалитету = суммы[cтолбец];
                Assert.AreEqual(ожидСуммаДопусковПоКвалитету, суммаДопусковПоКвалитету);
            }
        }

        [Test]
        public void ТестНайтиДопуск()
        {
            decimal ожидДопуск = 0.12m;
            decimal допуск = ТаблицаДопусков.НайтиДопуск(5.6m, 12);
            Assert.AreEqual(ожидДопуск, допуск);
        }

        [Test]
        public void ТестНайтиКвалитетТочноИлиСтроже()
        {
            decimal[] размеры = { 3m, 3m, 10000m, 10000m };
            decimal[] допуски = { 0.002m, 0.0019m, 940m, 0.038m };
            int[] ожидКвалитеты = { 3, 2, 18, -1 };
            for (int i = 0; i < размеры.Length; i++)
            {
                int квалитет = ТаблицаДопусков.НайтиКвалитетТочноИлиСтроже(размеры[i], допуски[i]);
                Assert.AreEqual(ожидКвалитеты[i], квалитет);
            }
        }

        [Test]
        public void ТестНайтиБлижайшийКвалитет()
        {
            decimal[] размеры = { 4.63m, 4.63m, 4.63m, 4.63m, 4.63m };
            decimal[] допуски = { 0.018m, 0.023m, 0.024m, 0.029m, 0.030m };
            int[] ожидКвалитеты = { 8, 8, 9, 9, 9 };
            for (int i = 0; i < размеры.Length; i++)
            {
                int квалитет = ТаблицаДопусков.НайтиБлижайшийКвалитет(размеры[i], допуски[i]);
                Assert.AreEqual(ожидКвалитеты[i], квалитет);
            }
        }

        [Test]
        public void ТестНайтиКвалитетПоДиаметруИДопуску()
        {
            int количествоСтрок = ТаблицаДопусков.допуски.Length;
            int количествоСтолбцов = ТаблицаДопусков.допуски[0].Length;
            for (int строка = 0; строка < количествоСтрок; строка++)
            {
                for (int Столбец = 0; Столбец < количествоСтолбцов; Столбец++)
                {
                    decimal диаметр = ТаблицаДопусков.верхнииГраницыИнтервалов[строка];
                    decimal допуск = ТаблицаДопусков.допуски[строка][Столбец] / 1000;
                    decimal квалитет = ТаблицаДопусков.ИндексСтолбцаВКвалитет(Столбец);
                    decimal x = ТаблицаДопусков.НайтиКвалитетТочноИлиСтроже(диаметр, допуск);
                    Assert.AreEqual(квалитет, x);
                }
            }
        }

    }
}
