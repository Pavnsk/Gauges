using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;
using МашиностроительнаяБиблиотека;

namespace МашиностроительнаяБиблиотекаТесты
{
    [TestFixture]
    class ПоляДопусковТесты
    {
        [Test]
        public void Test1()
        {
            for (decimal размер = 1m; размер <= 500m; размер += 1)
            {
                int квалитет = 4;
                decimal ожидВерхнееОтклонение = ТаблицаДопусков.НайтиДопуск(размер, квалитет);
                decimal верхнееОтклонение = ПоляДопусков.H4.НайтиВерхнееОтклонение(размер);
                Assert.AreEqual(ожидВерхнееОтклонение, верхнееОтклонение);
            }

            for (decimal размер = 1m; размер <= 500m; размер += 1)
            {
                int квалитет = 5;
                decimal ожидВерхнееОтклонение = ТаблицаДопусков.НайтиДопуск(размер, квалитет);
                decimal верхнееОтклонение = ПоляДопусков.H5.НайтиВерхнееОтклонение(размер);
                Assert.AreEqual(ожидВерхнееОтклонение, верхнееОтклонение);
            }


            for (decimal размер = 1m; размер <= 500m; размер += 1)
            {
                int квалитет = 6;
                decimal ожидВерхнееОтклонение = ТаблицаДопусков.НайтиДопуск(размер, квалитет);
                decimal верхнееОтклонение = ПоляДопусков.H6.НайтиВерхнееОтклонение(размер);
                Assert.AreEqual(ожидВерхнееОтклонение, верхнееОтклонение);
            }


            for (decimal размер = 1m; размер <= 500m; размер += 1)
            {
                int квалитет = 7;
                decimal ожидВерхнееОтклонение = ТаблицаДопусков.НайтиДопуск(размер, квалитет);
                decimal верхнееОтклонение = ПоляДопусков.H7.НайтиВерхнееОтклонение(размер);
                Assert.AreEqual(ожидВерхнееОтклонение, верхнееОтклонение);
            }


            for (decimal размер = 1m; размер <= 500m; размер += 1)
            {
                int квалитет = 8;
                decimal ожидВерхнееОтклонение = ТаблицаДопусков.НайтиДопуск(размер, квалитет);
                decimal верхнееОтклонение = ПоляДопусков.H8.НайтиВерхнееОтклонение(размер);
                Assert.AreEqual(ожидВерхнееОтклонение, верхнееОтклонение);
            }

            for (decimal размер = 1m; размер <= 500m; размер += 1)
            {
                int квалитет = 9;
                decimal ожидВерхнееОтклонение = ТаблицаДопусков.НайтиДопуск(размер, квалитет);
                decimal верхнееОтклонение = ПоляДопусков.H9.НайтиВерхнееОтклонение(размер);
                Assert.AreEqual(ожидВерхнееОтклонение, верхнееОтклонение);
            }

            for (decimal размер = 1m; размер <= 500m; размер += 1)
            {
                int квалитет = 10;
                decimal ожидВерхнееОтклонение = ТаблицаДопусков.НайтиДопуск(размер, квалитет);
                decimal верхнееОтклонение = ПоляДопусков.H10.НайтиВерхнееОтклонение(размер);
                Assert.AreEqual(ожидВерхнееОтклонение, верхнееОтклонение);
            }

            for (decimal размер = 1m; размер <= 500m; размер += 1)
            {
                int квалитет = 11;
                decimal ожидВерхнееОтклонение = ТаблицаДопусков.НайтиДопуск(размер, квалитет);
                decimal верхнееОтклонение = ПоляДопусков.H11.НайтиВерхнееОтклонение(размер);
                Assert.AreEqual(ожидВерхнееОтклонение, верхнееОтклонение);
            }

            for (decimal размер = 1m; размер <= 500m; размер += 1)
            {
                int квалитет = 12;
                decimal ожидВерхнееОтклонение = ТаблицаДопусков.НайтиДопуск(размер, квалитет);
                decimal верхнееОтклонение = ПоляДопусков.H12.НайтиВерхнееОтклонение(размер);
                Assert.AreEqual(ожидВерхнееОтклонение, верхнееОтклонение);
            }
        }

        [Test]
        public void Test2()
        {
            for (decimal размер = 1m; размер <= 500m; размер += 1)
            {
                int квалитет = 4;
                decimal ожидДопуск = ТаблицаДопусков.НайтиДопуск(размер, квалитет);
                decimal допуск = ПоляДопусков.h4.НайтиДопуск(размер);
                Assert.AreEqual(ожидДопуск, допуск);
            }

            for (decimal размер = 1m; размер <= 500m; размер += 1)
            {
                int квалитет = 4;
                decimal ожидДопуск = ТаблицаДопусков.НайтиДопуск(размер, квалитет);
                decimal допуск = ПоляДопусков.js4.НайтиДопуск(размер);
                Assert.AreEqual(ожидДопуск, допуск);
            }

            for (decimal размер = 1m; размер <= 500m; размер += 1)
            {
                int квалитет = 4;
                decimal ожидДопуск = ТаблицаДопусков.НайтиДопуск(размер, квалитет);
                decimal допуск = ПоляДопусков.k4.НайтиДопуск(размер);
                Assert.AreEqual(ожидДопуск, допуск);
            }

            for (decimal размер = 1m; размер <= 500m; размер += 1)
            {
                int квалитет = 4;
                decimal ожидДопуск = ТаблицаДопусков.НайтиДопуск(размер, квалитет);
                decimal допуск = ПоляДопусков.m4.НайтиДопуск(размер);
                Assert.AreEqual(ожидДопуск, допуск);
            }
        }

        [Test]
        public void Test3()
        {
            for (decimal размер = 1m; размер <= 500m; размер += 1)
            {
                foreach (ПолеДопуска полеДопуска in ПоляДопусков.Все)
                {
                    int квалитет = полеДопуска.Квалитет;
                    decimal ожидДопуск = ТаблицаДопусков.НайтиДопуск(размер, квалитет);
                    decimal допуск = полеДопуска.НайтиДопуск(размер);

                    if (полеДопуска.Equals(ПоляДопусков.js7))
                    {
                        Assert.LessOrEqual(Math.Abs(допуск - ожидДопуск), 0.001);
                        continue;
                    }
                    
                    Assert.AreEqual(ожидДопуск, допуск);
                    
                }
            }
        }
    }
}
